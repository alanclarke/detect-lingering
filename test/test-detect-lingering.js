const sinon = require('sinon')
const expect = require('chai').expect
const createDetector = require('../index')
let clock, detector, stub

describe('detect-lingering', function () {
  beforeEach(function () {
    clock = sinon.useFakeTimers(Date.now())
    stub = sinon.stub()
    detector = createDetector(stub, { time: 100, speed: 1, interval: 50, timeout: 1000 })
  })

  afterEach(function () {
    detector.stop()
    clock.restore()
  })

  it('should detect no lingering while moving fast', function () {
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(2000)
    clock.tick(40)
    detector.update(3000)
    clock.tick(40)
    detector.update(4000)
    clock.tick(40)
    detector.update(5000)
    clock.tick(40)
    expect(stub.called).to.eql(false)
  })

  it('should detect no lingering while moving slow for a short period', function () {
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(1001)
    clock.tick(40)
    detector.update(1002)
    clock.tick(40)
    detector.update(4000)
    clock.tick(40)
    detector.update(5000)
    clock.tick(40)
    expect(stub.called).to.eql(false)
  })

  it('should detect lingering while moving slow for a period', function () {
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(2000)
    clock.tick(40)
    detector.update(2002)
    clock.tick(40)
    detector.update(2003)
    clock.tick(40)
    detector.update(2004)
    clock.tick(40)
    expect(stub.calledOnce).to.eql(true)
  })

  it('should detect lingering while not moving for a period', function () {
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    expect(stub.calledOnce).to.eql(true)
  })

  it('should detect a subsequent linger', function () {
    clock.tick(40)
    detector.update(1000)
    clock.tick(40)
    detector.update(2000)
    clock.tick(40)
    detector.update(2002)
    clock.tick(40)
    detector.update(2003)
    clock.tick(40)
    detector.update(2004)
    clock.tick(40)
    expect(stub.calledOnce).to.eql(true)

    // speed up again
    detector.update(3005)
    clock.tick(40)
    detector.update(4005)
    clock.tick(40)

    // second linger
    detector.update(5005)
    clock.tick(40)
    detector.update(5006)
    clock.tick(40)
    detector.update(5007)
    clock.tick(40)
    detector.update(5008)
    clock.tick(40)
    detector.update(5009)
    clock.tick(40)
    expect(stub.calledTwice).to.eql(true)
  })
})
